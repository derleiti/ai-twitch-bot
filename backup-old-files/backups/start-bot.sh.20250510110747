#!/bin/bash

# Farben für die Ausgabe
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Konfiguration
BASE_DIR="/root/zephyr"
BOT_SCRIPT="$BASE_DIR/twitch-ollama-bot.py"
LOG_FILE="$BASE_DIR/twitch-ollama-bot.log"
PID_FILE="$BASE_DIR/twitch-ollama-bot.pid"

echo -e "${BLUE}=== Twitch-Ollama-Bot Starter ===${NC}"

# Prüfe, ob das Hauptverzeichnis existiert
if [ ! -d "$BASE_DIR" ]; then
    echo -e "${RED}Fehler: Das Verzeichnis $BASE_DIR existiert nicht!${NC}"
    mkdir -p "$BASE_DIR"
    echo -e "${GREEN}Verzeichnis erstellt: $BASE_DIR${NC}"
fi

# Prüfe, ob das Bot-Skript existiert
if [ ! -f "$BOT_SCRIPT" ]; then
    echo -e "${RED}Fehler: Bot-Skript '$BOT_SCRIPT' nicht gefunden!${NC}"
    exit 1
fi

# Prüfe, ob der Bot läuft und stoppe ihn, falls nötig
if [ -f "$PID_FILE" ]; then
    PID=$(cat "$PID_FILE")
    if ps -p "$PID" > /dev/null; then
        echo -e "${YELLOW}Bot läuft bereits mit PID $PID${NC}"
        read -p "Möchtest du den laufenden Bot neu starten? (j/n): " restart
        if [ "$restart" = "j" ] || [ "$restart" = "J" ]; then
            echo -e "${YELLOW}Stoppe laufenden Bot mit PID $PID...${NC}"
            kill "$PID"
            sleep 2
            # Prüfe, ob der Bot gestoppt wurde
            if ps -p "$PID" > /dev/null; then
                echo -e "${RED}Bot konnte nicht sauber beendet werden, versuche mit SIGKILL...${NC}"
                kill -9 "$PID"
                sleep 1
            fi
            # Prüfe nochmal
            if ! ps -p "$PID" > /dev/null; then
                echo -e "${GREEN}Bot erfolgreich gestoppt.${NC}"
                echo "$(date) - Bot wurde für Neustart gestoppt." >> "$LOG_FILE"
                rm "$PID_FILE"
            else
                echo -e "${RED}Bot konnte nicht beendet werden. Start abgebrochen.${NC}"
                exit 1
            fi
        else
            echo -e "${BLUE}Start abgebrochen.${NC}"
            exit 0
        fi
    else
        echo -e "${YELLOW}Alte PID-Datei gefunden, aber Bot ist nicht aktiv. Entferne alte PID-Datei.${NC}"
        rm "$PID_FILE"
    fi
fi

# Prüfe, ob alle erforderlichen Python-Pakete installiert sind
echo -e "${YELLOW}Prüfe erforderliche Python-Pakete...${NC}"
pip install -q requests python-dotenv

# Warte auf Ollama-Server
echo -e "${YELLOW}Warte auf Ollama-Server...${NC}"
for i in {1..60}; do
    if curl -s --fail http://localhost:11434/api/version > /dev/null; then
        echo -e "${GREEN}Ollama-Server bereit nach $i Sekunden${NC}"
        break
    fi
    
    if [ $i -eq 60 ]; then
        echo -e "${RED}FEHLER: Ollama-Server nach 60 Sekunden nicht erreichbar!${NC}"
        echo "Bitte starte Ollama mit 'ollama serve' und versuche es erneut."
        exit 1
    fi
    
    echo -n "."
    sleep 1
done

# Stelle sicher, dass das Bot-Skript ausführbar ist
chmod +x "$BOT_SCRIPT"

# Starte den Bot im Hintergrund
echo -e "${YELLOW}Starte Twitch-Ollama-Bot...${NC}"
python3 "$BOT_SCRIPT" &
BOT_PID=$!

# Warte kurz, um zu sehen, ob der Prozess sofort stirbt
sleep 2
if ps -p $BOT_PID > /dev/null; then
    echo -e "${GREEN}✓ Bot erfolgreich gestartet mit PID $BOT_PID${NC}"
    
    echo -e "\n${BLUE}=== Bot-Features ===${NC}"
    echo -e "1. ${GREEN}Automatische Witze:${NC} Der Bot erzählt regelmäßig Witze im Chat"
    echo -e "2. ${GREEN}Spielkommentare:${NC} Kommentiert das laufende Spiel"
    echo -e "3. ${GREEN}Bildkommentare:${NC} Beschreibt und kommentiert Szenen im Stream"
    echo -e "4. ${GREEN}Befehlserinnerungen:${NC} Erinnert an verfügbare Befehle"
    echo -e "5. ${GREEN}Fragen-Beantwortung:${NC} Beantwortet Fragen über Ollama"
    
    echo -e "\n${BLUE}Wie überwache ich den Bot?${NC}"
    echo -e "Logs ansehen: ${YELLOW}tail -f $LOG_FILE${NC}"
    echo -e "Bot manuell stoppen: ${YELLOW}kill $BOT_PID${NC}"
else
    echo -e "${RED}FEHLER: Bot konnte nicht gestartet werden oder wurde sofort beendet${NC}"
    echo -e "Überprüfe die Logs für weitere Details: ${YELLOW}cat $LOG_FILE${NC}"
    exit 1
fi

# Erstellen eines systemd-Service (optional)
create_service_file() {
    if [ -d "/etc/systemd/system" ]; then
        echo -e "\n${YELLOW}Möchtest du einen systemd-Service für den Bot erstellen? (j/n): ${NC}"
        read create_service
        
        if [ "$create_service" = "j" ] || [ "$create_service" = "J" ]; then
            SYSTEMD_SERVICE="/etc/systemd/system/twitch-ollama-bot.service"
            
            echo -e "${YELLOW}Erstelle systemd-Service-Datei...${NC}"
            
            cat > "$SYSTEMD_SERVICE" << EOLS
[Unit]
Description=Twitch Ollama Chatbot
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=$BASE_DIR
ExecStart=$BASE_DIR/start-bot.sh
Restart=on-failure
RestartSec=10

[Install]
WantedBy=multi-user.target
EOLS
            
            systemctl daemon-reload
            
            echo -e "${GREEN}Service-Datei erstellt: $SYSTEMD_SERVICE${NC}"
            echo -e "Du kannst den Bot jetzt mit folgenden Befehlen steuern:"
            echo -e "${YELLOW}systemctl start twitch-ollama-bot${NC} - Bot starten"
            echo -e "${YELLOW}systemctl stop twitch-ollama-bot${NC} - Bot stoppen"
            echo -e "${YELLOW}systemctl enable twitch-ollama-bot${NC} - Bot beim Systemstart automatisch starten"
            
            echo -e "\nMöchtest du den Bot beim Systemstart automatisch starten? (j/n): "
            read enable_service
            
            if [ "$enable_service" = "j" ] || [ "$enable_service" = "J" ]; then
                systemctl enable twitch-ollama-bot
                echo -e "${GREEN}Bot wird jetzt beim Systemstart automatisch gestartet.${NC}"
            fi
        fi
    fi
}

# Frage, ob ein systemd-Service erstellt werden soll
create_service_file

exit 0
